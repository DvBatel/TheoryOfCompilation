@.str0 = constant [3 x i8] c":/\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}

@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"

declare i32 @scanf(i8*, ...)
declare i32 @printf(i8*, ...)
declare void @exit(i32)

@.int_specifier_scan = constant [3 x i8] c"%d\00"
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"

define i32 @readi(i32){
%ret_val = alloca i32
%spec_ptr = getelementptr [3 x i8], [3 x i8]* @.int_specifier_scan, i32 0, i32 0
call i32 (i8*, ...) @scanf(i8* %spec_ptr, i32* %ret_val)
%val = load i32, i32* %ret_val
ret i32 %val
}

define void @printi(i32){
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*){
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define i32 @foo(i32 %arg0, i8 %arg1){
%t0 = alloca i32, i32 50
%t1 = zext i8 %arg1 to i32
%t2 = add i32 %arg0, %t1
%t3 = add i32 0, %t2
%t4 = getelementptr i32, i32* %t0, i32 0
store i32 %t3, i32* %t4
%t5 = getelementptr i32, i32* %t0, i32 0
%t6 = load i32, i32* %t5
ret i32 %t6
}
define void @main(){
%t7 = alloca i32, i32 50
%t8 = call i32 @foo(i32 15, i8 5)
%t9 = add i32 0, %t8
%t10 = getelementptr i32, i32* %t7, i32 0
store i32 %t9, i32* %t10
%t11 = call i32 @foo(i32 42, i8 8)
%t12 = add i32 0, %t11
%t13 = getelementptr i32, i32* %t7, i32 1
store i32 %t12, i32* %t13
%t14 = getelementptr i32, i32* %t7, i32 0
%t15 = load i32, i32* %t14
%t16 = getelementptr i32, i32* %t7, i32 1
%t17 = load i32, i32* %t16
%t18 = icmp slt i32 %t15, %t17
br i1 %t18, label %label_0, label %label_1

label_0:
%t19 = getelementptr i32, i32* %t7, i32 0
%t20 = load i32, i32* %t19
%t21 = getelementptr i32, i32* %t7, i32 1
%t22 = load i32, i32* %t21
%t23 = add i32 %t20, %t22
call void @printi(i32 %t23)
br label %label_2
label_1:
call void @print(i8* getelementptr ([3 x i8] , [3 x i8]* @.str0, i32 0, i32 0))
br label %label_2

label_2:


ret void
}
