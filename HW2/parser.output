Terminals unused in grammar

   CONST
   COMMENT
   AUTO


Rules useless in parser due to conflicts

    9 Formals: /* empty */


State 13 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: Funcs

    2 Funcs: FuncDecl Funcs
    3      | /* empty */

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    5 RetType: Type
    6        | VOID

    7 Formals: FormalsList
    8        | /* empty */
    9        | /* empty */

   10 FormalsList: FormalDecl COMMA FormalsList
   11            | FormalDecl

   12 Statement: Type ID SC
   13          | Type ID ASSIGN Exp SC

   14 FormalDecl: Type ID

   15 Statements: Statement
   16           | Statements Statement

   17 Statement: LBRACE Statements RBRACE
   18          | ID ASSIGN Exp SC
   19          | Call SC
   20          | RETURN SC
   21          | RETURN Exp SC
   22          | IF LPAREN Exp RPAREN Statement ELSE Statement
   23          | IF LPAREN Exp RPAREN Statement
   24          | WHILE LPAREN Exp RPAREN Statement
   25          | BREAK SC
   26          | CONTINUE SC

   27 Call: ID LPAREN ExpList RPAREN
   28     | ID LPAREN RPAREN

   29 ExpList: Exp COMMA ExpList
   30        | Exp

   31 Type: INT
   32     | BYTE
   33     | BOOL

   34 Exp: LPAREN Exp RPAREN
   35    | Exp BINOP Exp
   36    | LPAREN Type RPAREN Exp
   37    | Call
   38    | ID
   39    | NUM B
   40    | NUM
   41    | STRING
   42    | TRUE
   43    | FALSE
   44    | NOT Exp
   45    | Exp AND Exp
   46    | Exp OR Exp
   47    | Exp RELOP Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 6
INT (259) 31
BYTE (260) 32
B (261) 39
BOOL (262) 33
CONST (263)
BINOP (264) 35
RELOP (265) 47
TRUE (266) 42
FALSE (267) 43
IF (268) 22 23
RETURN (269) 20 21
WHILE (270) 24
BREAK (271) 25
CONTINUE (272) 26
SC (273) 12 13 18 19 20 21 25 26
COMMA (274) 10 29
COMMENT (275)
ID (276) 4 12 13 14 18 27 28 38
NUM (277) 39 40
STRING (278) 41
AUTO (279)
ASSIGN (280) 13 18
OR (281) 46
AND (282) 45
NOT (283) 44
RBRACE (284) 4 17
LBRACE (285) 4 17
RPAREN (286) 4 22 23 24 27 28 34 36
LPAREN (287) 4 22 23 24 27 28 34 36
ELSE (288) 22


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
Program (35)
    on left: 1, on right: 0
Funcs (36)
    on left: 2 3, on right: 1 2
FuncDecl (37)
    on left: 4, on right: 2
RetType (38)
    on left: 5 6, on right: 4
Formals (39)
    on left: 7 8 9, on right: 4
FormalsList (40)
    on left: 10 11, on right: 7 10
Statement (41)
    on left: 12 13 17 18 19 20 21 22 23 24 25 26, on right: 15 16 22
    23 24
FormalDecl (42)
    on left: 14, on right: 10 11
Statements (43)
    on left: 15 16, on right: 4 16 17
Call (44)
    on left: 27 28, on right: 19 37
ExpList (45)
    on left: 29 30, on right: 27 29
Type (46)
    on left: 31 32 33, on right: 5 12 13 14 36
Exp (47)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47, on right: 13
    18 21 22 23 24 29 30 34 35 36 44 45 46 47


state 0

    0 $accept: . Program $end

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 3 (Funcs)

    Program   go to state 5
    Funcs     go to state 6
    FuncDecl  go to state 7
    RetType   go to state 8
    Type      go to state 9


state 1

    6 RetType: VOID .

    $default  reduce using rule 6 (RetType)


state 2

   31 Type: INT .

    $default  reduce using rule 31 (Type)


state 3

   32 Type: BYTE .

    $default  reduce using rule 32 (Type)


state 4

   33 Type: BOOL .

    $default  reduce using rule 33 (Type)


state 5

    0 $accept: Program . $end

    $end  shift, and go to state 10


state 6

    1 Program: Funcs .

    $default  reduce using rule 1 (Program)


state 7

    2 Funcs: FuncDecl . Funcs

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 3 (Funcs)

    Funcs     go to state 11
    FuncDecl  go to state 7
    RetType   go to state 8
    Type      go to state 9


state 8

    4 FuncDecl: RetType . ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    ID  shift, and go to state 12


state 9

    5 RetType: Type .

    $default  reduce using rule 5 (RetType)


state 10

    0 $accept: Program $end .

    $default  accept


state 11

    2 Funcs: FuncDecl Funcs .

    $default  reduce using rule 2 (Funcs)


state 12

    4 FuncDecl: RetType ID . LPAREN Formals RPAREN LBRACE Statements RBRACE

    LPAREN  shift, and go to state 13


state 13

    4 FuncDecl: RetType ID LPAREN . Formals RPAREN LBRACE Statements RBRACE

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    RPAREN    reduce using rule 8 (Formals)
    RPAREN    [reduce using rule 9 (Formals)]
    $default  reduce using rule 8 (Formals)

    Formals      go to state 14
    FormalsList  go to state 15
    FormalDecl   go to state 16
    Type         go to state 17


state 14

    4 FuncDecl: RetType ID LPAREN Formals . RPAREN LBRACE Statements RBRACE

    RPAREN  shift, and go to state 18


state 15

    7 Formals: FormalsList .

    $default  reduce using rule 7 (Formals)


state 16

   10 FormalsList: FormalDecl . COMMA FormalsList
   11            | FormalDecl .

    COMMA  shift, and go to state 19

    $default  reduce using rule 11 (FormalsList)


state 17

   14 FormalDecl: Type . ID

    ID  shift, and go to state 20


state 18

    4 FuncDecl: RetType ID LPAREN Formals RPAREN . LBRACE Statements RBRACE

    LBRACE  shift, and go to state 21


state 19

   10 FormalsList: FormalDecl COMMA . FormalsList

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    FormalsList  go to state 22
    FormalDecl   go to state 16
    Type         go to state 17


state 20

   14 FormalDecl: Type ID .

    $default  reduce using rule 14 (FormalDecl)


state 21

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE . Statements RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    IF        shift, and go to state 23
    RETURN    shift, and go to state 24
    WHILE     shift, and go to state 25
    BREAK     shift, and go to state 26
    CONTINUE  shift, and go to state 27
    ID        shift, and go to state 28
    LBRACE    shift, and go to state 29

    Statement   go to state 30
    Statements  go to state 31
    Call        go to state 32
    Type        go to state 33


state 22

   10 FormalsList: FormalDecl COMMA FormalsList .

    $default  reduce using rule 10 (FormalsList)


state 23

   22 Statement: IF . LPAREN Exp RPAREN Statement ELSE Statement
   23          | IF . LPAREN Exp RPAREN Statement

    LPAREN  shift, and go to state 34


state 24

   20 Statement: RETURN . SC
   21          | RETURN . Exp SC

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    SC      shift, and go to state 37
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 44


state 25

   24 Statement: WHILE . LPAREN Exp RPAREN Statement

    LPAREN  shift, and go to state 45


state 26

   25 Statement: BREAK . SC

    SC  shift, and go to state 46


state 27

   26 Statement: CONTINUE . SC

    SC  shift, and go to state 47


state 28

   18 Statement: ID . ASSIGN Exp SC
   27 Call: ID . LPAREN ExpList RPAREN
   28     | ID . LPAREN RPAREN

    ASSIGN  shift, and go to state 48
    LPAREN  shift, and go to state 49


state 29

   17 Statement: LBRACE . Statements RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    IF        shift, and go to state 23
    RETURN    shift, and go to state 24
    WHILE     shift, and go to state 25
    BREAK     shift, and go to state 26
    CONTINUE  shift, and go to state 27
    ID        shift, and go to state 28
    LBRACE    shift, and go to state 29

    Statement   go to state 30
    Statements  go to state 50
    Call        go to state 32
    Type        go to state 33


state 30

   15 Statements: Statement .

    $default  reduce using rule 15 (Statements)


state 31

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements . RBRACE
   16 Statements: Statements . Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    IF        shift, and go to state 23
    RETURN    shift, and go to state 24
    WHILE     shift, and go to state 25
    BREAK     shift, and go to state 26
    CONTINUE  shift, and go to state 27
    ID        shift, and go to state 28
    RBRACE    shift, and go to state 51
    LBRACE    shift, and go to state 29

    Statement  go to state 52
    Call       go to state 32
    Type       go to state 33


state 32

   19 Statement: Call . SC

    SC  shift, and go to state 53


state 33

   12 Statement: Type . ID SC
   13          | Type . ID ASSIGN Exp SC

    ID  shift, and go to state 54


state 34

   22 Statement: IF LPAREN . Exp RPAREN Statement ELSE Statement
   23          | IF LPAREN . Exp RPAREN Statement

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 55


state 35

   42 Exp: TRUE .

    $default  reduce using rule 42 (Exp)


state 36

   43 Exp: FALSE .

    $default  reduce using rule 43 (Exp)


state 37

   20 Statement: RETURN SC .

    $default  reduce using rule 20 (Statement)


state 38

   27 Call: ID . LPAREN ExpList RPAREN
   28     | ID . LPAREN RPAREN
   38 Exp: ID .

    LPAREN  shift, and go to state 49

    $default  reduce using rule 38 (Exp)


state 39

   39 Exp: NUM . B
   40    | NUM .

    B  shift, and go to state 56

    $default  reduce using rule 40 (Exp)


state 40

   41 Exp: STRING .

    $default  reduce using rule 41 (Exp)


state 41

   44 Exp: NOT . Exp

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 57


state 42

   34 Exp: LPAREN . Exp RPAREN
   36    | LPAREN . Type RPAREN Exp

    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Type  go to state 58
    Exp   go to state 59


state 43

   37 Exp: Call .

    $default  reduce using rule 37 (Exp)


state 44

   21 Statement: RETURN Exp . SC
   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    BINOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    SC     shift, and go to state 62
    OR     shift, and go to state 63
    AND    shift, and go to state 64


state 45

   24 Statement: WHILE LPAREN . Exp RPAREN Statement

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 65


state 46

   25 Statement: BREAK SC .

    $default  reduce using rule 25 (Statement)


state 47

   26 Statement: CONTINUE SC .

    $default  reduce using rule 26 (Statement)


state 48

   18 Statement: ID ASSIGN . Exp SC

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 66


state 49

   27 Call: ID LPAREN . ExpList RPAREN
   28     | ID LPAREN . RPAREN

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    RPAREN  shift, and go to state 67
    LPAREN  shift, and go to state 42

    Call     go to state 43
    ExpList  go to state 68
    Exp      go to state 69


state 50

   16 Statements: Statements . Statement
   17 Statement: LBRACE Statements . RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    IF        shift, and go to state 23
    RETURN    shift, and go to state 24
    WHILE     shift, and go to state 25
    BREAK     shift, and go to state 26
    CONTINUE  shift, and go to state 27
    ID        shift, and go to state 28
    RBRACE    shift, and go to state 70
    LBRACE    shift, and go to state 29

    Statement  go to state 52
    Call       go to state 32
    Type       go to state 33


state 51

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE .

    $default  reduce using rule 4 (FuncDecl)


state 52

   16 Statements: Statements Statement .

    $default  reduce using rule 16 (Statements)


state 53

   19 Statement: Call SC .

    $default  reduce using rule 19 (Statement)


state 54

   12 Statement: Type ID . SC
   13          | Type ID . ASSIGN Exp SC

    SC      shift, and go to state 71
    ASSIGN  shift, and go to state 72


state 55

   22 Statement: IF LPAREN Exp . RPAREN Statement ELSE Statement
   23          | IF LPAREN Exp . RPAREN Statement
   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    BINOP   shift, and go to state 60
    RELOP   shift, and go to state 61
    OR      shift, and go to state 63
    AND     shift, and go to state 64
    RPAREN  shift, and go to state 73


state 56

   39 Exp: NUM B .

    $default  reduce using rule 39 (Exp)


state 57

   35 Exp: Exp . BINOP Exp
   44    | NOT Exp .
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    $default  reduce using rule 44 (Exp)


state 58

   36 Exp: LPAREN Type . RPAREN Exp

    RPAREN  shift, and go to state 74


state 59

   34 Exp: LPAREN Exp . RPAREN
   35    | Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    BINOP   shift, and go to state 60
    RELOP   shift, and go to state 61
    OR      shift, and go to state 63
    AND     shift, and go to state 64
    RPAREN  shift, and go to state 75


state 60

   35 Exp: Exp BINOP . Exp

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 76


state 61

   47 Exp: Exp RELOP . Exp

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 77


state 62

   21 Statement: RETURN Exp SC .

    $default  reduce using rule 21 (Statement)


state 63

   46 Exp: Exp OR . Exp

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 78


state 64

   45 Exp: Exp AND . Exp

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 79


state 65

   24 Statement: WHILE LPAREN Exp . RPAREN Statement
   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    BINOP   shift, and go to state 60
    RELOP   shift, and go to state 61
    OR      shift, and go to state 63
    AND     shift, and go to state 64
    RPAREN  shift, and go to state 80


state 66

   18 Statement: ID ASSIGN Exp . SC
   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    BINOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    SC     shift, and go to state 81
    OR     shift, and go to state 63
    AND    shift, and go to state 64


state 67

   28 Call: ID LPAREN RPAREN .

    $default  reduce using rule 28 (Call)


state 68

   27 Call: ID LPAREN ExpList . RPAREN

    RPAREN  shift, and go to state 82


state 69

   29 ExpList: Exp . COMMA ExpList
   30        | Exp .
   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    BINOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    COMMA  shift, and go to state 83
    OR     shift, and go to state 63
    AND    shift, and go to state 64

    $default  reduce using rule 30 (ExpList)


state 70

   17 Statement: LBRACE Statements RBRACE .

    $default  reduce using rule 17 (Statement)


state 71

   12 Statement: Type ID SC .

    $default  reduce using rule 12 (Statement)


state 72

   13 Statement: Type ID ASSIGN . Exp SC

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 84


state 73

   22 Statement: IF LPAREN Exp RPAREN . Statement ELSE Statement
   23          | IF LPAREN Exp RPAREN . Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    IF        shift, and go to state 23
    RETURN    shift, and go to state 24
    WHILE     shift, and go to state 25
    BREAK     shift, and go to state 26
    CONTINUE  shift, and go to state 27
    ID        shift, and go to state 28
    LBRACE    shift, and go to state 29

    Statement  go to state 85
    Call       go to state 32
    Type       go to state 33


state 74

   36 Exp: LPAREN Type RPAREN . Exp

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call  go to state 43
    Exp   go to state 86


state 75

   34 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 34 (Exp)


state 76

   35 Exp: Exp . BINOP Exp
   35    | Exp BINOP Exp .
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    $default  reduce using rule 35 (Exp)


state 77

   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   47    | Exp RELOP Exp .

    BINOP  shift, and go to state 60

    $default  reduce using rule 47 (Exp)


state 78

   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   46    | Exp OR Exp .
   47    | Exp . RELOP Exp

    BINOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    AND    shift, and go to state 64

    $default  reduce using rule 46 (Exp)


state 79

   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   45    | Exp AND Exp .
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    BINOP  shift, and go to state 60
    RELOP  shift, and go to state 61

    $default  reduce using rule 45 (Exp)


state 80

   24 Statement: WHILE LPAREN Exp RPAREN . Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    IF        shift, and go to state 23
    RETURN    shift, and go to state 24
    WHILE     shift, and go to state 25
    BREAK     shift, and go to state 26
    CONTINUE  shift, and go to state 27
    ID        shift, and go to state 28
    LBRACE    shift, and go to state 29

    Statement  go to state 87
    Call       go to state 32
    Type       go to state 33


state 81

   18 Statement: ID ASSIGN Exp SC .

    $default  reduce using rule 18 (Statement)


state 82

   27 Call: ID LPAREN ExpList RPAREN .

    $default  reduce using rule 27 (Call)


state 83

   29 ExpList: Exp COMMA . ExpList

    TRUE    shift, and go to state 35
    FALSE   shift, and go to state 36
    ID      shift, and go to state 38
    NUM     shift, and go to state 39
    STRING  shift, and go to state 40
    NOT     shift, and go to state 41
    LPAREN  shift, and go to state 42

    Call     go to state 43
    ExpList  go to state 88
    Exp      go to state 69


state 84

   13 Statement: Type ID ASSIGN Exp . SC
   35 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    BINOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    SC     shift, and go to state 89
    OR     shift, and go to state 63
    AND    shift, and go to state 64


state 85

   22 Statement: IF LPAREN Exp RPAREN Statement . ELSE Statement
   23          | IF LPAREN Exp RPAREN Statement .

    ELSE  shift, and go to state 90

    $default  reduce using rule 23 (Statement)


state 86

   35 Exp: Exp . BINOP Exp
   36    | LPAREN Type RPAREN Exp .
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    $default  reduce using rule 36 (Exp)


state 87

   24 Statement: WHILE LPAREN Exp RPAREN Statement .

    $default  reduce using rule 24 (Statement)


state 88

   29 ExpList: Exp COMMA ExpList .

    $default  reduce using rule 29 (ExpList)


state 89

   13 Statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 13 (Statement)


state 90

   22 Statement: IF LPAREN Exp RPAREN Statement ELSE . Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    IF        shift, and go to state 23
    RETURN    shift, and go to state 24
    WHILE     shift, and go to state 25
    BREAK     shift, and go to state 26
    CONTINUE  shift, and go to state 27
    ID        shift, and go to state 28
    LBRACE    shift, and go to state 29

    Statement  go to state 91
    Call       go to state 32
    Type       go to state 33


state 91

   22 Statement: IF LPAREN Exp RPAREN Statement ELSE Statement .

    $default  reduce using rule 22 (Statement)
